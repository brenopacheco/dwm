diff -uN a/config.h b/config.h
--- a/config.h	2019-06-22 17:12:40.589933776 +0100
+++ b/config.h	2019-06-22 17:44:18.069874422 +0100
@@ -1,16 +1,17 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
+static const char *xres = "/home/USERNAME/.Xresources";
 static const char *fonts[] = {
 	"monospace:size=10"
 };
 static const char dmenufont[]       = "monospace:size=10";
-static const char normbordercolor[] = "#444444";
-static const char normbgcolor[]     = "#222222";
-static const char normfgcolor[]     = "#bbbbbb";
-static const char selbordercolor[]  = "#005577";
-static const char selbgcolor[]      = "#005577";
-static const char selfgcolor[]      = "#eeeeee";
+static char normbordercolor[] = "#444444";
+static char normbgcolor[]     = "#222222";
+static char normfgcolor[]     = "#bbbbbb";
+static char selbordercolor[]  = "#005577";
+static char selbgcolor[]      = "#005577";
+static char selfgcolor[]      = "#eeeeee";
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
@@ -59,6 +60,7 @@
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
+	{ MODKEY,                       XK_F5,     xrdb,           {.v = NULL } },
 	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
diff -uN a/dwm.c b/dwm.c
--- a/dwm.c	2019-06-22 17:12:40.599933776 +0100
+++ b/dwm.c	2019-06-22 17:43:56.549875095 +0100
@@ -35,6 +35,7 @@
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
+#include <X11/Xresource.h>
 #include <X11/Xutil.h>
 #ifdef XINERAMA
 #include <X11/extensions/Xinerama.h>
@@ -56,6 +57,21 @@
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
 #define TAGMASK                 ((1 << LENGTH(tags)) - 1)
 #define TEXTW(X)                (drw_text(drw, 0, 0, 0, 0, (X), 0) + drw->fonts[0]->h)
+#define XRDB_LOAD_COLOR(R,V)    if (XrmGetResource(xrdb, R, NULL, &type, &value) == True) { \
+                                  if (value.addr != NULL && strnlen(value.addr, 8) == 7 && value.addr[0] == '#') { \
+                                    int i = 1; \
+                                    for (; i <= 6; i++) { \
+                                      if (value.addr[i] < 48) break; \
+                                      if (value.addr[i] > 57 && value.addr[i] < 65) break; \
+                                      if (value.addr[i] > 70 && value.addr[i] < 97) break; \
+                                      if (value.addr[i] > 102) break; \
+                                    } \
+                                    if (i == 7) { \
+                                      strncpy(V, value.addr, 7); \
+                                      V[7] = '\0'; \
+                                    } \
+                                  } \
+                                }
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
@@ -178,6 +194,7 @@
 static void incnmaster(const Arg *arg);
 static void keypress(XEvent *e);
 static void killclient(const Arg *arg);
+static void loadxrdb(void);
 static void manage(Window w, XWindowAttributes *wa);
 static void mappingnotify(XEvent *e);
 static void maprequest(XEvent *e);
@@ -232,6 +249,7 @@
 static int xerror(Display *dpy, XErrorEvent *ee);
 static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
+static void xrdb(const Arg *arg);
 static void zoom(const Arg *arg);
 
 /* variables */
@@ -1030,6 +1048,23 @@
 }
 
 void
+loadxrdb()
+{
+  XrmDatabase xrdb = XrmGetFileDatabase(xres);
+  if (xrdb != NULL) {
+    char *type;
+    XrmValue value;
+
+    XRDB_LOAD_COLOR("dwm.normbordercolor", normbordercolor);
+    XRDB_LOAD_COLOR("dwm.normbgcolor", normbgcolor);
+    XRDB_LOAD_COLOR("dwm.normfgcolor", normfgcolor);
+    XRDB_LOAD_COLOR("dwm.selbordercolor", selbordercolor);
+    XRDB_LOAD_COLOR("dwm.selbgcolor", selbgcolor);
+    XRDB_LOAD_COLOR("dwm.selfgcolor", selfgcolor);
+  }
+}
+
+void
 manage(Window w, XWindowAttributes *wa)
 {
 	Client *c, *t = NULL;
@@ -2107,6 +2142,22 @@
 }
 
 void
+xrdb(const Arg *arg)
+{
+  loadxrdb();
+
+  scheme[SchemeNorm].border = drw_clr_create(drw, normbordercolor);
+  scheme[SchemeNorm].bg = drw_clr_create(drw, normbgcolor);
+  scheme[SchemeNorm].fg = drw_clr_create(drw, normfgcolor);
+  scheme[SchemeSel].border = drw_clr_create(drw, selbordercolor);
+  scheme[SchemeSel].bg = drw_clr_create(drw, selbgcolor);
+  scheme[SchemeSel].fg = drw_clr_create(drw, selfgcolor);
+
+  focus(NULL);
+  arrange(NULL);
+}
+
+void
 zoom(const Arg *arg)
 {
 	Client *c = selmon->sel;
@@ -2132,6 +2183,7 @@
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("dwm: cannot open display\n");
 	checkotherwm();
+  loadxrdb();
 	setup();
 	scan();
 	run();
