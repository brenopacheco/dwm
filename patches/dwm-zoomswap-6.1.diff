diff -uN a/config.h b/config.h
--- a/config.h	2015-11-08 22:39:37.000000000 +0000
+++ b/config.h	2019-06-20 18:06:00.360573283 +0100
@@ -1,5 +1,7 @@
 /* See LICENSE file for copyright and license details. */
 
+#include "zoomswap.c"
+
 /* appearance */
 static const char *fonts[] = {
 	"monospace:size=10"
diff -uN a/dwm.c b/dwm.c
--- a/dwm.c	2015-11-08 22:39:37.000000000 +0000
+++ b/dwm.c	2019-06-20 18:05:52.447239408 +0100
@@ -235,6 +235,7 @@
 static void zoom(const Arg *arg);
 
 /* variables */
+static Client *prevzoom = NULL;
 static const char broken[] = "broken";
 static char stext[256];
 static int screen;
@@ -2110,14 +2111,38 @@
 zoom(const Arg *arg)
 {
 	Client *c = selmon->sel;
+	Client *at = NULL, *cold, *cprevious = NULL;
 
 	if (!selmon->lt[selmon->sellt]->arrange
 	|| (selmon->sel && selmon->sel->isfloating))
 		return;
-	if (c == nexttiled(selmon->clients))
-		if (!c || !(c = nexttiled(c->next)))
-			return;
-	pop(c);
+	if(c == nexttiled(selmon->clients)) {
+		at = findbefore(prevzoom);
+		if(at)
+			cprevious = nexttiled(at->next);
+		if(!cprevious || cprevious != prevzoom) {
+			prevzoom = NULL;
+			if(!c || !(c = nexttiled(c->next)))
+				return;
+		} else
+			c = cprevious;
+	}
+	cold = nexttiled(selmon->clients);
+	if(c != cold && !at)
+		at = findbefore(c);
+	detach(c);
+	attach(c);
+	/* swap windows instead of pushing the previous one down */
+	if(c != cold && at) {
+		prevzoom = cold;
+		if(cold && at != cold) {
+			detach(cold);
+			cold->next = at->next;
+			at->next = cold;
+		}
+	}
+	focus(c);
+	arrange(c->mon);
 }
 
 int
diff -uN a/zoomswap.c b/zoomswap.c
--- a/zoomswap.c	1970-01-01 01:00:00.000000000 +0100
+++ b/zoomswap.c	2019-06-20 18:05:52.450572742 +0100
@@ -0,0 +1,10 @@
+static Client * findbefore(Client *c);
+
+Client *
+findbefore(Client *c) {
+	Client *tmp;
+	if(c == selmon->clients)
+		return NULL;
+	for(tmp = selmon->clients; tmp && tmp->next != c; tmp = tmp->next) ;
+	return tmp;
+}
